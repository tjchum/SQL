#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data.

-- How many orders were placed in January?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

-- How many of those orders were for an iPhone?
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone'
AND length(orderID) = 6
AND orderID <> 'Order ID';

-- Select the customer account numbers for all the orders that were placed in Feburary.
SELECT distinct acctnum
FROM BIT_DB.customers cust

INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

-- Which product was the cheapest one sold in January, and what was the price?
SELECT product, min(price)
FROM BIT_DB.JanSales Jan
GROUP BY product, price
ORDER BY price ASC
LIMIT 1;

-- What is the total revenue for each product sold in Janurary?
SELECT SUM(Quantity)*price as revenue, Product
FROM BIT_DB.JanSales
GROUP BY Product;

-- Which products were sold in Februry at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, SUM(Quantity),
SUM(Quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

-- How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT
count(distinct cust.acctnum),
avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE Feb.Quantity>2
AND length(orderid) = 6
AND orderid <> 'Order ID';

-- List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product;

-- List the order date between February 13, 2019 and February 18, 2019, no matter what the time (HH:MM) was.
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

-- What is the location of the order date of February 18, 2019  at 1:35.
SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35';

-- What is the amount of orders placed on February 18, 2019 and forward.
SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';

-- List what type of batteries there is.
SELECT distinct Product
FROM BIT_DB.FebSales
WHERE Product like '%Batteries%';

-- List all the products in February that end with 0.99.
SELECT distinct Product, Price
FROM BIT_DB.FebSales 
WHERE Price like '%.99';

-- Which location in New York received at least 3 orders in Janurary, and how many orders did they each receive?
SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND LENGTH(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY location
HAVING count(orderID)>2;

-- How many of each type of headphone were sold in February?
SELECT sum(Quantity) as quantity
FROM BIT_DB.FebSales
WHERE Product LIKE '%Headphones%'
GROUP BY Product;

-- What was the average amount spent per account in February?
SELECT sum(Quantity*price)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderID = cust.order_id
WHERE LENGTH(orderID) = 6
AND orderID <> 'Order ID';

# OR #

SELECT avg(quantity*price)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON FEB.orderid=cust.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

-- What was the aversge quantity of products purchased per account in February?
SELECT sum(Quantity)/count(cust.acctnum)
FROM BIT_DB.FebSales Feb
LEFT JOIN BIT_DB.customers cust
ON Feb.orderID=cust.order_id
WHERE length(orderID) = 6 
AND orderID <> 'Order ID';

-- Which product brought in the most revenue in Janurary and how much revenue did it bring in total?
SELECT Product, SUM(Quantity*price)
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY SUM(Quantity*price) desc
LIMIT 1;
