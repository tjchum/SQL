 CREATE TABLE vips (
     member_id INTEGER PRIMARY KEY
   , last_name TEXT
   , first_name TEXT
   , event INTEGER
   , provides_feedback_to INTEGER
   , association TEXT
   , assoc_type TEXT
   , member_since INTEGER
   );
   
CREATE TABLE reservations ( 
    member_id INTEGER
  , hotel INTEGER
  , welcome_rsvp BIT
  , dinner_rsvp BIT
  );
 
 
CREATE TABLE events (
    event_id INTEGER PRIMARY KEY
  , event_name TEXT
  , event_type TEXT
  );
  

CREATE TABLE hotels (
    hotel_id INTEGER PRIMARY KEY
  , hotel_name TEXT
  , address TEXT
  );


INSERT INTO vips VALUES
(2814, 'Fletcher', 'David', 5, 3742, 'Anishinabek Educational Institute', 'education', 2004)
,(1944, 'Kim', 'Jiho', 4, 4230, 'Appalachian State', 'education', 1991)
,(3889, 'Kowalski', 'Alex', 9, 3460, 'Brigg & McKinnnon AEC', 'private', 2015)
,(3775, 'Al-Hassan', 'Amina', 6, 3891, 'California Department of Water Resources', 'government', 2013)
,(4003, 'Chang', 'Nathan', 8, 3960, 'Chang Engineers, LLC', 'private', 2017)
,(3490, 'Anderson', 'Shanae', 2, 4315, 'Chicago Department of Public Health', 'government', 2008)
,(3077, 'Murphy', 'Aisling', 3, 2731, 'Climate Impacts on Farming Institute', 'research', 2006)
,(3960, 'Ivanov', 'Dmitri', 6, 2814, 'Cooperative Institute for Climate, Ocean, and Ecosystem Studies', 'research', 2016)
,(4402, 'Bennett', 'Leah', NULL, NULL, 'Denver Climate Research Foundation', 'research', 2024)
,(3891, 'Roy', 'Harper', 4, 3077, 'Environmental Science Associates', 'private', 2015)
,(4386, 'Silva', 'Thiago', NULL, NULL, 'Everglades Research Institute', 'research', 2023)
,(4297, 'Chukwu', 'Ifeoma', 9, 2716, 'Georgia State University', 'education', 2020)
,(3189, 'Martinez', 'Isabella', 8, 2011, 'Iowa State University', 'education', 2007)
,(3491, 'Gonzalez', 'Victor', 5, 3047, 'McGill University', 'education', 2008)
,(3742, 'Brown', 'Timothy', 3, 3490, 'Michigan State University', 'education', 2012)
,(4361, 'Riley', 'Daniel', 6, 1944, 'Minnesota Water Board', 'education', 2023)
,(1934, 'Garcia', 'Mateo', NULL, NULL, 'Oklahoma Department of Wildlife Conservation', 'government', 1990)
,(2011, 'Patel', 'Anika', 7, 3491, 'Renewable Energy Research Center, Honolulu', 'research', 1995)
,(4315, 'Shepherd', 'Priya', 10, 4003, 'Tech517', 'private', 2022)
,(1738, 'Johnson', 'Denny', NULL, NULL, 'Texas Department of Conservation and Natural Resources', 'government', 1987)
,(4230, 'Parker', 'Moss', 2, 3719, 'University of California, Davis', 'education', 2019)
,(2731, 'Rivera', 'Juan', 1, 4297, 'University of Montana', 'education', 2003)
,(2091, 'Haines', 'Keisha', 11, 3189, 'University of North Carolina', 'education', 1998)
,(2551, 'Nguyen', 'Linh', 2, 2091, 'University of Pennsylvania', 'education', 2002)
,(3047, 'Singh', 'Aarav', 4, 2551, 'US Department of Fish and Wildlife', 'government', 2005)
,(4112, 'Fernandez', 'Lucia', NULL, NULL, 'US Department of Fish and Wildlife', 'government', 2018)
,(3719, 'Denton', 'K. L.', 11, 3889, 'US Department of Housing and Urban Development', 'government', 2011)
,(3460, 'Chen', 'Beverly', 7, 4361, 'US Department of Natural Resources', 'government', 2008)
,(2716, 'Rodriguez', 'Sofia', 7, 3775, 'US Department of Renewable Energy', 'government', 2003)
,(2800, 'Lee', 'Min-Jun', NULL, NULL, 'US Department of Renewable Energy', 'government', 2004)
;


INSERT INTO reservations VALUES
 (3491,  1, 1, 1)
,(4361,  1, 1, 1)
,(3047,  2, 1, 1)
,(3775,  1, 1, 1)
,(4003,  3, 0, 1)
,(4402,  2, 1, 1)
,(3891,  3, 1, 1)
,(2011,  1, 1, 1)
,(4808,  2, 1, 1)
,(3490,  1, 0, 1)
,(3189,  1, 1, 1)
,(1944,  1, 0, 1)
,(2716,  2, 0, 1)
,(2551,  2, 1, 1)
,(4386,  2, 0, 1)
,(2814,  3, 1, 1)
,(1738,  2, 0, 1)
,(3960,  1, 1, 1)
,(4315,  3, 1, 0)
,(4722,  2, 1, 1)
,(2731,  3, 1, 1)
,(2091,  1, 1, 0)
,(3889,  3, 1, 1)
,(3742,  2, 0, 1)
,(3719,  2, 0, 1)
,(3460,  2, 1, 1)
,(3077,  2, 0, 1)
,(4420,  1, 1, 0)
,(2800,  2, 0, 1)
,(1934,  3, 1, 1)
;


INSERT INTO events VALUES
  (1, 'Climate Change Communication: Engaging the Public and Policy Makers', 'Keynote')
, (2, 'Climate Change and Public Health: Risks and Responses', 'Panel')
, (3, 'Climate Change and Agriculture: Ensuring Food Security', 'Panel')
, (4, 'Biodiversity and Ecosystem Services in a Changing Climate', 'Panel')
, (5, 'Indigenous Knowledge and Climate Change Adaptation', 'Panel')
, (6, 'The Role of Oceans in Climate Change: Impacts and Solutions', 'Panel')
, (7, 'Climate Change and Renewable Energy: Innovations and Challenges', 'Panel')
, (8, 'Climate Justice and Equity: Addressing Disproportionate Impacts', 'Panel')
, (9, 'The Economic Impact of Climate Change: Costs and Opportunities', 'Panel')
, (10, 'Technological Innovations for Climate Monitoring and Assessment', 'Workshop')
, (11, 'Urban Resilience: Designing Climate-Smart Cities', 'Workshop')
, (12, 'The Role of Policy in Combating Climate Change', 'Workshop')
;


INSERT INTO hotels VALUES
   (1, 'Hyatt Downtown', '392 South Main Street, Cityville, PA')
 , (2, 'Marriott', '1240 Marshall Avenue, Cityville, PA')
 , (3, 'Four Season''s', '900 Winter Road, Cityville, PA')
 ;

-- What information does the database contain
SELECT * FROM vips LIMIT 5;
SELECT * FROM reservations LIMIT 5;
SELECT * FROM events LIMIT 5;
SELECT * FROM hotels;

 --How many VIPs are there?
SELECT COUNT(member_id)
FROM vips;

 --1. [LEFT JOIN] -- List all the VIPs (last and first name) and any panels they are presenting at.
SELECT vips.last_name
, vips.first_name
, events.event_id
FROM vips
LEFT JOIN events
ON vips.event = events.event_id
;

-- 2. [INNER JOIN] -- Show the events that all VIPS are attending with their event type and their association type. Order by their event type.
SELECT vips.assoc_type
, events.event_name
, events.event_type
FROM vips
JOIN events
ON vips.event = events.event_id
ORDER BY events.event_type asc;

-- 3. [Multiples JOINs] -- List all the VIPs (last and first name), the hotel they're staying at with the address.
SELECT vips.last_name
, vips.first_name
, hotels.hotel_name
, hotels.address
FROM vips
JOIN reservations
ON vips.member_id = reservations.member_id
JOIN hotels
ON reservations.hotel = hotels.hotel_id
ORDER BY hotels.hotel_name asc;

-- 4. [subquery or SELF JOIN] -- List each VIP and VIP they provided feedback to, showing their first and last names with their member ID. Order it with the VIP given member ID.
SELECT giver.member_id AS giver_id
, giver.last_name AS giver_first_name
, giver.first_name AS giver_last_name
, recs.member_id AS receiver_id
, recs.first_name AS receiver_first_name
, recs.last_name AS receiver_first_name
FROM vips giver
JOIN vips recs
ON giver.member_id = recs.provides_feedback_to
ORDER BY giver.member_id
;

-- 5. Find VIPs staying in the same hotel as Jiho Kim who are not attending the welcome reservation.

-- 5.a) Find out what hotel is Jiho Kim staying in
SELECT h.hotel_name
FROM vips v
JOIN reservations r
ON v.member_id = r.member_id

JOIN hotels h
ON r.hotel = h.hotel_id

WHERE v.first_name = 'Jiho'
AND v.last_name = 'Kim'
;

-- 5.b) Find out who is in the same hotel as Jiho Kim
-- the first way I did this
SELECT v.first_name
, v.last_name
FROM vips v
JOIN reservations r
ON v.member_id = r.member_id

JOIN hotels h
ON r.hotel = h.hotel_id
WHERE h.hotel_name = 'Hyatt Downtown';

-- Slightly shorter way that I figured out I can do

SELECT v.first_name
, v.last_name
FROM vips v
JOIN reservations r
ON v.member_id = r.member_id
WHERE r.hotel = 1
;

-- 5.c) Find out who isn't going to the welcome reservation
SELECT v.first_name
, v.last_name
, r.welcome_rsvp
FROM vips v
JOIN reservations r
ON v.member_id = r.member_id
WHERE r.welcome_rsvp = '0';

-- 5.d) Combine the queries
SELECT vip.first_name
, vip.last_name
FROM vips AS vip
JOIN reservations AS res
ON vip.member_id = res.member_id

JOIN hotels AS hotel
ON res.hotel = hotel.hotel_id

WHERE res.hotel = (
  SELECT jiho_res.hotel
  FROM vips AS jiho
  JOIN reservations AS jiho_res
  ON jiho.member_id = jiho_res.member_id
  WHERE jiho.first_name = 'Jiho'
  AND jiho.last_name = 'Kim'
)
AND res.welcome_rsvp = 0;

-- 6. Which hotels are hosting 10 or more VIPs? List the hotel and the number of VIPs staying there.
SELECT h.hotel_name
, COUNT(r.member_id) AS vip_count
FROM reservations r
JOIN hotels h
ON r.hotel = h.hotel_id
GROUP BY h.hotel_name
HAVING COUNT(r.member_id) >= 10;

-- 7. [SELF JOIN] Find VIPs who attending the same panel event as another VIP. List both VIPs' names and the panel name.
SELECT v1.first_name AS vip1_first_name
, v1.last_name AS vip1_last_name
, v2.first_name AS vip2_first_name
, v2.last_name AS vip2_first_name
, e.event_name
FROM vips v1
JOIN vips v2
ON v1.event = v2.event
AND v1.member_id < v2.member_id
JOIN events e
ON v1.event = e.event_id
WHERE e.event_type = 'Panel'
ORDER BY e.event_name
, v1.member_id, v2.member_id
;

