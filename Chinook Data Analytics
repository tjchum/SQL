--1.Show Customers (their full names, customer ID, and country) who are not in the US. 
SELECT c.FirstName
, c.LastName
, c.CustomerId
, c.Country
FROM customers AS c
WHERE Country <> 'USA'
;

--2. Show only the Customers from Brazil.
SELECT c.FirstName
, c.LastName
, c.Country
FROM customers AS c
WHERE Country = 'Brazil'
;

--3. Find the Invoices of customers who are from Brazil. 
--The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT c.FirstName || ' ' || c.LastName AS FullName
, inv.InvoiceId
, inv.InvoiceDate
, inv.BillingCountry
FROM customers AS c
JOIN invoices AS inv
ON c.CustomerId = inv.InvoiceId
WHERE c.Country = 'Brazil'
ORDER BY inv.InvoiceDate DESC
;

--4. Show the Employees who are Sales Agents.
SELECT * FROM employees;

SELECT e.FirstName ||' '|| e.LastName AS FullName
, e.Title
FROM employees e
WHERE Title LIKE 'Sales%'
;

--5. Find a unique/distinct list of billing countries and total invoices from each country, from the Invoice table.
SELECT DISTINCT BillingCountry,
COUNT(*) AS TotalInvoices
FROM invoices
GROUP BY BillingCountry
ORDER BY TotalInvoices DESC;

--6. Provide a query that shows the invoices associated with each sales agent. 
--The resulting table should include the Sales Agent's full name.
WITH SalesAgent AS (
SELECT e.FirstName ||' '|| e.LastName AS FullName
, e.Title
, e.EmployeeId
FROM employees e
WHERE Title LIKE 'Sales%'
)

SELECT sa.FullName AS SalesAgent
, inv.InvoiceId
, inv.InvoiceDate
FROM customers AS c
JOIN SalesAgent sa 
ON c.SupportRepId = sa.EmployeeId

JOIN invoices AS inv
ON c.CustomerId = inv.CustomerId
;

--7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
WITH SalesAgent AS (
SELECT e.FirstName ||' '|| e.LastName AS FullName
, e.Title
, e.EmployeeId
FROM employees e
WHERE Title LIKE 'Sales%'
)

SELECT inv.Total
, c.FirstName ||' '|| c.LastName AS Cust_FullName
, c.Country
, sa.FullName AS SalesAgent
FROM invoices AS inv
JOIN customers AS c
ON inv.CustomerId = c.CustomerId

JOIN SalesAgent sa 
ON c.SupportRepId = sa.EmployeeId
ORDER BY inv.Total;

--8. How many Invoices were there in 2009?
SELECT COUNT(InvoiceId)
FROM invoices
WHERE InvoiceDate LIKE '%2009%'
;

--9. What are the total sales for 2009?
SELECT ROUND(SUM(Total), 2) AS TotalSales_2009
FROM invoices
WHERE InvoiceDate LIKE '%2009%'
;

--10. Write a query that includes the purchased track name with each invoice line ID.
SELECT t.Name
, inv_item.InvoiceId
FROM tracks AS t
JOIN invoice_items AS inv_item
ON t.TrackId = inv_item.TrackId
;

--11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT inv_item.InvoiceId
, t.Name
, artists.Name AS Artists_name
FROM tracks AS t
JOIN invoice_items AS inv_item
ON t.TrackId = inv_item.TrackId

JOIN albums
ON t.AlbumId = albums.AlbumId

JOIN artists
ON albums.ArtistId = artists.ArtistId
ORDER BY inv_item.InvoiceId
;

--12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS track_name
, albums.Title AS album_title
, Mt.Name AS media_typeId
, g.Name AS genre_name
FROM tracks AS t
LEFT JOIN albums
ON t.AlbumId = albums.AlbumId

LEFT JOIN media_types AS Mt
ON t.MediaTypeId = Mt.MediaTypeId

LEFT JOIN genres AS g
ON t.GenreId = g.GenreId
;
